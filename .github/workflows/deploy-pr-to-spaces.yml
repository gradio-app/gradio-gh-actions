name: Upload demo

on:
  workflow_call:
    inputs:
      wheel_name:
        type: string
        required: true
      pr_number:
        type: string
        required: true
      sha:
        type: string
        required: true
      run_id:
        type: string
        required: true
      gradio_version:
        type: string
        required: true

jobs:
  deploy-current-pr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        repository: 'gradio-app/gradio-gh-actions'
    - name: Install Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Install pip
      run: python -m pip install build requests
    - name: 'Download wheel'
      run: python scripts/download_artifacts.py ${{ inputs.run_id }} ${{ inputs.wheel_name }}  ${{ secrets.COMMENT_TOKEN }}
    - run: unzip ${{ inputs.wheel_name }}.zip
    - name: Upload wheel
      run: |
        export AWS_ACCESS_KEY_ID=${{ secrets.PR_DEPLOY_KEY }}
        export AWS_SECRET_ACCESS_KEY=${{ secrets.PR_DEPLOY_SECRET }}
        export AWS_DEFAULT_REGION=us-east-1
        aws s3 cp ${{ inputs.wheel_name }} s3://gradio-builds/${{ inputs.sha  }}/
    - name: Install Hub Client Library
      run: pip install huggingface-hub
    - name: 'Download all_demos'
      run: python scripts/download_artifacts.py ${{ inputs.run_id }} all_demos  ${{ secrets.COMMENT_TOKEN }}
    - run: unzip all_demos.zip -d all_demos
    - name: Upload demo to spaces
      run: |
        python scripts/upload_demo_to_space.py all_demos \
        gradio-pr-deploys/pr-${{ inputs.pr_number }}-all-demos \
        ${{ secrets.SPACES_DEPLOY_TOKEN }} \
        --gradio-version ${{ inputs.gradio_version }} > url.txt
        echo "SPACE_URL=$(cat url.txt)" >> $GITHUB_ENV
    - name: Comment On Release PR
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: |
          All the demos for this PR have been deployed at ${{ env.SPACE_URL }}
        comment_includes: All the demos for this PR have been deployed at
        GITHUB_TOKEN: ${{ secrets.COMMENT_TOKEN }}
